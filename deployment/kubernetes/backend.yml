kind: Namespace
apiVersion: v1
metadata:
  name: challenge
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: challenge_config
data:
  ENVIRONMENT: "Production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: challenge_api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: challenge_api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: challenge_api
    spec:
      containers:
      - name: challenge_api
        image: jailtonjunior/financial_api:v1
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 50m
            memory: "64Mi"
          limits:
            cpu: 50m
            memory: "64Mi"
        envFrom:
        - configMapRef:
            name: challenge_config
        startupProbe:
          httpGet:
            path: /health
            port: 80
          periodSeconds: 3
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          periodSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          periodSeconds: 5
          failureThreshold: 3
          timeoutSeconds: 5
          successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: challenge_api
spec:
  selector:
    app: challenge_api
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: challenge_api
#   labels:
#     name: challenge_api
#   annotations:
#     kubernetes.io/ingress.class: addon-http-application-routing
# spec:
#   rules:
#   - host: challenge-api.{DNSzone}
#     http:
#       paths:
#       - path: "/"
#         pathType: Prefix
#         backend:
#           service:
#             name: challenge_api
#             port:
#               number: 80
---
